{"version":3,"sources":["components/config.js","components/hash.js","components/Player.js","App.js","reportWebVitals.js","index.js"],"names":["scopes","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","Player","props","backgroundStyles","backgroundImage","album","images","url","progressBarStyles","width","progress_ms","duration_ms","className","src","name","artists","style","App","state","token","is_playing","no_data","getCurrentlyPlaying","bind","tick","_token","access_token","this","setState","interval","setInterval","clearInterval","$","type","beforeSend","xhr","setRequestHeader","success","data","href","icon","faGithub","faLinkedin","faFile","faEnvelope","join","faSpotify","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAKaA,EAAS,CAClB,gBACA,8BACA,4BCPEC,EAAOC,OAAOC,SAASF,KAC1BG,UAAU,GACVC,MAAM,KACNC,QAAO,SAASC,EAASC,GACxB,GAAIA,EAAM,CACR,IAAIC,EAAQD,EAAKH,MAAM,KACvBE,EAAQE,EAAM,IAAMC,mBAAmBD,EAAM,IAE/C,OAAOF,IACN,IACLL,OAAOC,SAASF,KAAO,GAERA,Q,eCqBAU,EA/BA,SAAAC,GAEX,IAAMC,EAAmB,CACrBC,gBAAgB,OAAD,OACfF,EAAMJ,KAAKO,MAAMC,OAAO,GAAGC,IADZ,MAKbC,EAAoB,CACtBC,MAA4B,IAApBP,EAAMQ,YAAoBR,EAAMJ,KAAKa,YAAe,KAGhE,OACI,sBAAKC,UAAU,SAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,qBAAKC,IAAKX,EAAMJ,KAAKO,MAAMC,OAAO,GAAGC,QAEzC,sBAAKK,UAAU,oBAAf,UACI,qBAAKA,UAAU,oBAAf,SAAoCV,EAAMJ,KAAKgB,OAC/C,qBAAKF,UAAU,sBAAf,SACKV,EAAMJ,KAAKiB,QAAQ,GAAGD,OAE3B,qBAAKF,UAAU,WAAf,SACI,qBAAKA,UAAU,gBAAgBI,MAAOR,SAG9C,qBAAKI,UAAU,aAAaI,MAAOb,IAAqB,Q,QCuGrDc,E,kDAzHb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,MAAO,KACPrB,KAAM,CACJO,MAAO,CACLC,OAAQ,CAAC,CAAEC,IAAK,MAElBO,KAAM,GACNC,QAAS,CAAC,CAAED,KAAM,KAClBH,YAAa,GAEfS,WAAY,SACZV,YAAa,EACbW,SAAS,GAGX,EAAKC,oBAAsB,EAAKA,oBAAoBC,KAAzB,gBAC3B,EAAKC,KAAO,EAAKA,KAAKD,KAAV,gBAlBA,E,qDAuBd,WAAqB,IAAD,OAEdE,EAASlC,EAAKmC,aAEdD,IAEFE,KAAKC,SAAS,CACZT,MAAOM,IAETE,KAAKL,oBAAoBG,IAI3BE,KAAKE,SAAWC,aAAY,kBAAM,EAAKN,SAAQ,O,kCAGjD,WAEEO,cAAcJ,KAAKE,Y,kBAGrB,WACKF,KAAKT,MAAMC,OACZQ,KAAKL,oBAAoBK,KAAKT,MAAMC,S,iCAKxC,SAAoBA,GAAQ,IAAD,OAEzBa,OAAO,CACLzB,IAAK,uCACL0B,KAAM,MACNC,WAAY,SAAAC,GACVA,EAAIC,iBAAiB,gBAAiB,UAAYjB,IAEpDkB,QAAS,SAAAC,GAEHA,EAOJ,EAAKV,SAAS,CACZ9B,KAAMwC,EAAKxC,KACXsB,WAAYkB,EAAKlB,WACjBV,YAAa4B,EAAK5B,YAClBW,SAAS,IAVT,EAAKO,SAAS,CACZP,SAAS,S,oBAenB,WACE,OACA,eAAC,WAAD,WACE,sBAAKT,UAAU,SAAf,UACE,mDACA,oBAAGA,UAAU,YAAY2B,KAAK,gCAA9B,UAA8D,cAAC,IAAD,CAAiB3B,UAAU,OAAO4B,KAAMC,MAAtG,YACA,oBAAG7B,UAAU,YAAY2B,KAAK,gDAA9B,UAA8E,cAAC,IAAD,CAAiB3B,UAAU,OAAO4B,KAAME,MAAtH,cACA,oBAAG9B,UAAU,YAAY2B,KAAK,sCAA9B,UAAoE,cAAC,IAAD,CAAiB3B,UAAU,OAAO4B,KAAMG,MAA5G,YACA,oBAAG/B,UAAU,YAAY2B,KAAK,oCAA9B,UAAkE,cAAC,IAAD,CAAiB3B,UAAU,OAAO4B,KAAMI,MAA1G,cAEF,sBAAKhC,UAAU,MAAf,UACE,sBAAKA,UAAU,UAAf,WACIe,KAAKT,MAAMC,OAAU,oBACnBP,UAAU,QACV2B,KAAI,UHvGU,yCGuGV,sBHpGM,mCGoGN,yBHnGS,kCGmGT,kBAA6EjD,EAAOuD,KACtF,OADE,yCAFe,UAMnB,cAAC,IAAD,CAAiBjC,UAAU,OAAO4B,KAAMM,MANrB,uBAQtBnB,KAAKT,MAAMC,QAAUQ,KAAKT,MAAMG,SAC/B,cAAC,EAAD,CACEvB,KAAM6B,KAAKT,MAAMpB,KACjBsB,WAAYO,KAAKT,MAAME,WACvBV,YAAaiB,KAAKT,MAAMR,cAG3BiB,KAAKT,MAAMG,SACV,2GAKJ,qBAAKT,UAAU,OAAf,SACE,6D,GAlHQmC,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cb899990.chunk.js","sourcesContent":["export const authEndpoint = \"https://accounts.spotify.com/authorize\";\r\n\r\n// Replace with your app's client ID, redirect URI and desired scopes\r\nexport const clientId = \"80bd87927d7646ee80b09b1eda3a412f\";\r\nexport const redirectUri = \"http://localhost:3000/redirect/\";\r\nexport const scopes = [\r\n    \"user-top-read\",\r\n    \"user-read-currently-playing\",\r\n    \"user-read-playback-state\",\r\n];","// Get the hash of the url\r\nconst hash = window.location.hash\r\n  .substring(1)\r\n  .split(\"&\")\r\n  .reduce(function(initial, item) {\r\n    if (item) {\r\n      var parts = item.split(\"=\");\r\n      initial[parts[0]] = decodeURIComponent(parts[1]);\r\n    }\r\n    return initial;\r\n  }, {});\r\nwindow.location.hash = \"\";\r\n\r\nexport default hash;","import React from 'react';\r\nimport '../assets/css/Player.css';\r\n\r\nconst Player = props => {\r\n\r\n    const backgroundStyles = {\r\n        backgroundImage:`url(${\r\n        props.item.album.images[0].url\r\n        })`,\r\n    };\r\n\r\n    const progressBarStyles = {\r\n        width: (props.progress_ms * 100 / props.item.duration_ms) + '%'\r\n    };\r\n\r\n    return (\r\n        <div className=\"Player\">\r\n            <div className=\"now-playing__img\">\r\n                <img src={props.item.album.images[0].url} />\r\n            </div>\r\n            <div className=\"now-playing__side\">\r\n                <div className=\"now-playing__name\">{props.item.name}</div>\r\n                <div className=\"now-playing__artist\">\r\n                    {props.item.artists[0].name}\r\n                </div>\r\n                <div className=\"progress\">\r\n                    <div className=\"progress__bar\" style={progressBarStyles} />\r\n                </div>\r\n            </div>\r\n            <div className=\"background\" style={backgroundStyles} />{\" \"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player;\r\n","import React, {Component, Fragment} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub, faLinkedin, faSpotify } from \"@fortawesome/free-brands-svg-icons\";\nimport { faEnvelope, faFile } from '@fortawesome/free-solid-svg-icons';\nimport { authEndpoint, clientId, redirectUri, scopes } from \"./components/config\";\nimport hash from \"./components/hash\";\nimport Player from \"./components/Player\";\nimport * as $ from 'jquery';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      token: null,\n      item: {\n        album: {\n          images: [{ url: \"\" }]\n        },\n        name: \"\",\n        artists: [{ name: \"\" }],\n        duration_ms: 0\n      },\n      is_playing: \"Paused\",\n      progress_ms: 0,\n      no_data: false,\n    };\n\n    this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n    this.tick = this.tick.bind(this);\n  }\n\n\n\n  componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token\n      });\n      this.getCurrentlyPlaying(_token);\n    }\n\n    // set interval for polling every 5 seconds\n    this.interval = setInterval(() => this.tick(), 5000);\n  }\n\n  componentWillUnmount() {\n    // clear the interval to save resources\n    clearInterval(this.interval);\n  }\n\n  tick() {\n    if(this.state.token) {\n      this.getCurrentlyPlaying(this.state.token);\n    }\n  }\n\n\n  getCurrentlyPlaying(token) {\n    // Make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/player\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        // Checks if the data is not empty\n        if(!data) {\n          this.setState({\n            no_data: true,\n          });\n          return;\n        }\n\n        this.setState({\n          item: data.item,\n          is_playing: data.is_playing,\n          progress_ms: data.progress_ms,\n          no_data: false \n        });\n      }\n    });\n  }\n\n  render(){\n    return (\n    <Fragment>\n      <div className='navbar'>\n        <h2>Taylor Williamson</h2>\n        <a className='menu-item' href='https://github.com/tapdal2020'><FontAwesomeIcon className='icon' icon={faGithub}/>Github</a>\n        <a className='menu-item' href='http://linkedin.com/in/taylor-williamson-2020'><FontAwesomeIcon className='icon' icon={faLinkedin} />LinkedIn</a>\n        <a className='menu-item' href='./assets/files/ResumeTaylor2021.pdf'><FontAwesomeIcon className='icon' icon={faFile} />Resume</a>\n        <a className='menu-item' href='mailto:tawilliamson2020@gmail.com'><FontAwesomeIcon className='icon' icon={faEnvelope} />Email</a>\n      </div>\n      <div className=\"App\">\n        <div className=\"sidebar\">\n          {!this.state.token && (<a\n              className=\"login\"\n              href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n                \"%20\"\n              )}&response_type=token&show_dialog=true`}\n            >\n              <FontAwesomeIcon className='icon' icon={faSpotify}/> Login to Spotify\n            </a> )}\n          {this.state.token && !this.state.no_data && (\n            <Player\n              item={this.state.item}\n              is_playing={this.state.is_playing}\n              progress_ms={this.state.progress_ms}\n            />\n          )}\n          {this.state.no_data && (\n            <p>\n              You need to be playing a song on Spotify, for something to appear here.\n            </p>\n          )}\n        </div>\n        <div className='main'>\n          <p>this is the main</p>\n        </div>\n      </div>\n    </Fragment>\n  );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}